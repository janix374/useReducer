{"version":3,"sources":["components/ItemList.js","reducers/hobbies.js","components/HobbiesShowComponent.js","components/HobbiesComponent.js","data/data.js","App.js","serviceWorker.js","index.js"],"names":["ItemList","props","Form","Row","Group","as","Col","sm","Control","plaintext","readOnly","defaultValue","item","name","Button","variant","onClick","removeHobbies","hobbiesReducer","state","actions","type","filter","hobbie","payload","concat","HobbiesShowComponent","hobbiesShow","Container","className","ListGroup","map","imageSrc","toString","replace","Item","key","src","alt","HobbiesComponent","dataHobbies","useReducer","hobbies","dispatch","addHobies","dispatchTwo","useState","setHobbiesShow","buttonDisabled","setButtonDisabled","onsubmit","e","document","getElementById","preventDefault","reset","removeElement","useEffect","onSubmit","id","value","index","element","addElement","options","selectedIndex","disabled","App","href","target","window","location","reload","md","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.79392ba7.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Form, Col, Row, Button } from 'react-bootstrap';\r\nimport { FiMinusCircle } from 'react-icons/fi';\r\n\r\nconst ItemList = (props) => {\r\n  return (\r\n        <Form.Row>\r\n          <Form.Group as={Row}>\r\n              <Col sm=\"10\">\r\n              <Form.Control plaintext readOnly defaultValue={props.item} name={props.item}/>\r\n              </Col>\r\n              <Col sm=\"2\"><Button variant=\"outline-danger\" onClick={() => props.removeHobbies(props.item)}><FiMinusCircle/></Button></Col>\r\n          </Form.Group>\r\n        </Form.Row>\r\n  );\r\n}\r\n\r\nexport default ItemList;\r\n","//in this case hobbiesReducer state is hobbies\r\nconst hobbiesReducer = (state, actions) => {\r\n    switch(actions.type){\r\n        case 'REMOVE_HOBBIES':\r\n            return state.filter(hobbie => hobbie !== actions.payload)\r\n        case 'ADD_HOBBIES':\r\n            return state.concat(actions.payload)\r\n        case 'RESET':\r\n            return actions.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport { hobbiesReducer as default }","import React from \"react\";\r\nimport { Container, Row, Col, ListGroup } from \"react-bootstrap\";\r\n\r\nconst HobbiesShowComponent = ({ hobbiesShow }) => {\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <Row>\r\n        <Col>\r\n          <ListGroup>\r\n            {hobbiesShow.map((item) => {\r\n              let itemEdit = item.toString().replace(/ +/g, \"\");\r\n              let imageSrc = \"./image/\" + itemEdit + \".jpg\";\r\n              return (\r\n                <ListGroup.Item className=\"text-center\" key={item}>\r\n                  <span className=\"showHobbies  showhobbies-item\">{item}</span>\r\n                  <span className=\"showHobbies  showhobbies-item\">\r\n                    <img src={imageSrc} alt=\"Logo\" />\r\n                  </span>\r\n                </ListGroup.Item>\r\n              );\r\n            })}\r\n          </ListGroup>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\nexport default HobbiesShowComponent;\r\n","import React, { useReducer, useState, useEffect } from \"react\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport ItemList from \"./ItemList\";\r\nimport hobbiesReducer from \"../reducers/hobbies\";\r\nimport HobbiesShowComponent from \"./HobbiesShowComponent\";\r\n\r\nconst HobbiesComponent = ({ dataHobbies }) => {\r\n  //hobbies from select-option\r\n  const [hobbies, dispatch] = useReducer(hobbiesReducer, dataHobbies);\r\n  //hobies where remove items from select-options go\r\n  const [addHobies, dispatchTwo] = useReducer(hobbiesReducer, []);\r\n  //hobbies show on submit\r\n  const [hobbiesShow, setHobbiesShow] = useState([]);\r\n  const [buttonDisabled, setButtonDisabled] = useState(true);\r\n\r\n  const onsubmit = (e) => {\r\n    let element = document.getElementById(\"results\");\r\n    e.preventDefault();\r\n    setHobbiesShow(addHobies);\r\n    reset();\r\n  };\r\n\r\n  //remove hobbies from select and add to queue\r\n  const addHobbies = () => {\r\n    let element = document.getElementById(\"inlineFormCustomSelect\");\r\n    const addElement = element.options[element.selectedIndex].value;\r\n    dispatch({ type: \"REMOVE_HOBBIES\", payload: addElement });\r\n    if (addElement !== \"neutral\") {\r\n      dispatchTwo({ type: \"ADD_HOBBIES\", payload: addElement });\r\n    }\r\n  };\r\n\r\n  //remove hobbies from queue and add to select drop-down\r\n  const removeHobbies = (item) => {\r\n    const removeElement = item;\r\n    dispatchTwo({ type: \"REMOVE_HOBBIES\", payload: removeElement });\r\n    dispatch({ type: \"ADD_HOBBIES\", payload: removeElement });\r\n  };\r\n\r\n  const reset = () => {\r\n    dispatchTwo({ type: \"RESET\", payload: [] });\r\n    dispatch({ type: \"RESET\", payload: dataHobbies });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const button = addHobies <= 0 ? true : false;\r\n    setButtonDisabled(button);\r\n  }, [addHobies]);\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={onsubmit}>\r\n        <Form.Control\r\n          as=\"select\"\r\n          className=\"mr-sm-2\"\r\n          id=\"inlineFormCustomSelect\"\r\n        >\r\n          <option value=\"neutral\">Choose...</option>\r\n          {hobbies.map((item, index) => {\r\n            return (\r\n              <option key={index} value={item}>\r\n                {item}\r\n              </option>\r\n            );\r\n          })}\r\n        </Form.Control>\r\n        <Row>\r\n          <Col sm={4}>\r\n            <Button\r\n              variant=\"outline-primary\"\r\n              onClick={addHobbies}\r\n              className=\"my-4\"\r\n            >\r\n              Add hobbies\r\n            </Button>\r\n          </Col>\r\n          <Col sm={4}>\r\n            <Button\r\n              disabled={buttonDisabled}\r\n              variant=\"outline-primary\"\r\n              onClick={reset}\r\n              className=\"my-4\"\r\n            >\r\n              Reset all\r\n            </Button>\r\n          </Col>\r\n          <Col sm={4}>\r\n            <Button\r\n              disabled={buttonDisabled}\r\n              variant=\"outline-primary\"\r\n              onClick={onsubmit}\r\n              className=\"my-4\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        {addHobies.map((item) => {\r\n          return (\r\n            <ItemList key={item} item={item} removeHobbies={removeHobbies} />\r\n          );\r\n        })}\r\n      </Form>\r\n\r\n      <div className=\"m-4\">\r\n        <h5>Your Hobbies Are:</h5>\r\n        <HobbiesShowComponent hobbiesShow={hobbiesShow} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HobbiesComponent;\r\n","export default {\r\n    hobbies: [\r\n    'Standup comedy',//* \r\n    'Photography',//*\r\n    'Making Music',//*\r\n    'Cooking',//*\r\n    'Programming',//*\r\n    'Drawing',//*\r\n    'Bowling',//*\r\n    'Dance'//*\r\n]\r\n}","import React from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport HobbiesComponent from './components/HobbiesComponent';\nimport dataHobbies from './data/data';\n\nfunction App() {\n\tconst refreshPage = () => {\n\t\twindow.location.reload();\n\t};\n\n\treturn (\n\t\t<Container className='mt-4'>\n\t\t\t<Row>\n\t\t\t\t<a\n\t\t\t\t\thref='https://github.com/janix374/Select-option-useReducer'\n\t\t\t\t\ttarget='_blank'\n\t\t\t\t>\n\t\t\t\t\tLink to code\n\t\t\t\t</a>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Col>\n\t\t\t\t\t<h2>Your Hobbies</h2>\n\t\t\t\t</Col>\n\t\t\t\t<Col>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tclassName='mb-5'\n\t\t\t\t\t\tvariant='outline-primary'\n\t\t\t\t\t\tonClick={refreshPage}\n\t\t\t\t\t>\n\t\t\t\t\t\tRefresh Page\n\t\t\t\t\t</Button>\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t\t<Row>\n\t\t\t\t<Col className='mt-4' md={12}>\n\t\t\t\t\t<HobbiesComponent dataHobbies={dataHobbies.hobbies} />\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</Container>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}